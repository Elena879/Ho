/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}@font-face{font-family:'DroidSans';src:url("../../fonts/DroidSans/DroidSansRegular/DroidSansRegular.eot");src:url("../../fonts/DroidSans/DroidSansRegular/DroidSansRegular.eot?#iefix") format("embedded-opentype"),url("../../fonts/DroidSans/DroidSansRegular/DroidSansRegular.woff") format("woff"),url("../../fonts/DroidSans/DroidSansRegular/DroidSansRegular.ttf") format("truetype");font-style:normal;font-weight:400}@font-face{font-family:'DroidSans';src:url("../../fonts/DroidSans/DroidSansBold/DroidSansBold.eot");src:url("../../fonts/DroidSans/DroidSansBold/DroidSansBold.eot?#iefix") format("embedded-opentype"),url("../../fonts/DroidSans/DroidSansBold/DroidSansBold.woff") format("woff"),url("../../fonts/DroidSans/DroidSansBold/DroidSansBold.ttf") format("truetype");font-style:normal;font-weight:700}*{box-sizing:border-box}img{width:100%;height:auto;vertical-align:middle}.flex-between,form,.social-items,header nav,header nav .menu-items,header nav .right-menu,.introducing-block .introducing-list,.upcoming-latest .upcoming-latest-section,.popular-instagram .popular-instagram-block{display:flex;justify-content:space-between}.flex-center,.download-buttons,footer .footer-list{display:flex;justify-content:center}.section-name h2{padding:0;margin:0;color:#333;font:400 32px "Oswald",sans-serif;letter-spacing:3.2px;text-transform:uppercase}.section-name h2 span{color:#df001f;font-family:"Great Vibes",cursive;font-weight:400;text-transform:none;display:block}form{max-width:533px;width:100%;margin:0 auto;padding-bottom:5px;border-bottom:4px solid #999999}form textarea{-webkit-appearance:none;-moz-appearance:none;appearance:none;color:#282828;font:400 16px "DroidSans",sans-serif;border:none;outline:none;resize:none}form textarea::-webkit-input-placeholder{letter-spacing:3.2px}form textarea::-moz-placeholder{letter-spacing:3.2px}form textarea:-moz-placeholder{letter-spacing:3.2px}form textarea:-ms-input-placeholder{letter-spacing:3.2px}form button{-webkit-appearance:none;-moz-appearance:none;appearance:none;background:none;border:none;padding:0}form button:hover{transition:0.2s;opacity:0.7}form button i{color:#df001f;font-size:16px;font-weight:400}.description{-webkit-transition:all,.3s,ease-in-out;-moz-transition:all,.3s,ease-in-out;-o-transition:all,.3s,ease-in-out;transition:all,.3s,ease-in-out;position:absolute;bottom:0;width:100%;background-color:#df001f;padding:17px 0 24px 27px;height:83px}.description .performer h3{color:#fff;font:400 22px "Oswald",sans-serif;padding:0;margin:0}.description .performer span{color:#fff;font:400 16px "DroidSans",sans-serif;margin-top:5px;letter-spacing:normal}.description:hover{height:133px}.social-items{list-style:none;padding:0;margin:0;max-width:262px;width:100%}.social-items li{display:flex;align-items:center}.social-items li a{margin-right:10px}.social-items li a:hover{opacity:0.8;transition:0.2s}.social-items li a i{color:#fff;font-size:24px;font-weight:400;text-transform:uppercase}.social-items li span{color:#fff;font:400 14px "Open Sans",sans-serif;text-transform:uppercase}.description-list{max-width:197px;margin-top:25px}.go-over{float:right}.go-over a{width:35px;background-color:#df001f;text-decoration:none;display:inline-block;text-align:center;padding:7px}.go-over a:hover{transition:0.4s;opacity:0.8}.go-over a i{color:#fff;font-size:24px;font-weight:400;line-height:20px;text-transform:uppercase}.button{box-shadow:0 0 5px rgba(0,0,0,0.1);border-radius:25px;font:700 12px "DroidSans",sans-serif;text-transform:uppercase;letter-spacing:0.6px;text-decoration:none}.button:hover{transition:0.2s;opacity:0.9}.main-button{background-color:#df001f;color:#fff;padding:21px 46px;margin-top:90px;display:inline-block}.upcoming-button{padding:20px 40px;margin-top:30px}.learn-more-button{background-color:#fff;color:#df001f;padding:20px 40px;margin-top:47px;display:inline-block}.learn-more-button:hover{transition:0.2s;opacity:0.8}.download-buttons{margin-top:41px}.download-buttons a{max-width:165px;display:inline-block}.download-buttons a:hover{transition:0.2s;opacity:0.8}.download-buttons a:first-child{margin-right:14px}.container{max-width:1200px;padding:0 20px;width:100%;margin:0 auto}.header-container{max-width:1867px;padding:0 20px;width:100%;margin:0 auto}.instagram-pictures{display:grid;grid-template-columns:170px 170px;justify-content:space-between}header{background-color:#df001f;padding:11px 0 13px 0}header img{max-width:115px}header nav{align-items:center}header nav .menu-items{list-style:none;padding:0;margin:0}header nav .menu-items li{position:relative;padding:0 20px 0 20px}header nav .menu-items li:hover .overlay{position:absolute;left:0;right:0;top:9px;height:1px;background-color:#fff;opacity:0.5;transition:0.5s}header nav .menu-items li a{text-decoration:none;color:#fff;font:700 13px "DroidSans",sans-serif;text-transform:uppercase;letter-spacing:0.65px}header nav .right-menu{max-width:524px;width:100%}header nav .purchase{padding:22px 44px;background-color:#fff;color:#df001f}footer{border-top:1px solid #d2d2d2;padding:70px 0 90px 0;text-align:center}footer .footer-list{list-style:none;padding:0;margin:0;margin:0 auto}footer .footer-list li{margin:0 22px}footer .footer-list li a{font:400 13px "DroidSans",sans-serif;color:#333;letter-spacing:0.65px;text-transform:uppercase;text-decoration:none}footer .footer-list li a:hover{transition:0.2s;opacity:0.7}footer p{color:#333;letter-spacing:0.65px;margin-top:20px;font:400 13px "DroidSans",sans-serif}footer p span{color:#df001f;font:400 28px "Great Vibes",cursive;letter-spacing:1.4px}.main-section{background:url("../img/main-bg.png") no-repeat center top/cover;text-align:center;padding:208px 0 174px 0;border-bottom:3px solid #d3d3d3}.main-section:after{content:'';display:block;position:relative;bottom:-177px;max-width:1500px;width:100%;height:3px;background-color:#df001f}.main-section h1{color:#df001f;font:bold 116px "Oswald",sans-serif;text-transform:uppercase;padding:0;margin:0}.main-section h1 span{color:#333;font:400 80px "Great Vibes",cursive;text-transform:none;display:block}.introducing-block{padding:103px 0 100px 0;border-bottom:solid 1px #dfdfdf}.introducing-block:after{content:'';clear:both;display:block}.introducing-block .introducing-list{list-style:none;padding:0;margin:0;margin-top:45px}.introducing-block .introducing-list .introducing-item{position:relative;margin-right:30px}.introducing-block .introducing-list .introducing-item:last-child{margin-right:0}.upcoming-latest{padding-top:97px;margin-bottom:100px}.upcoming{max-width:770px;width:100%;border-bottom:4px solid #e9e9e9;padding-bottom:5px}.upcoming:after{content:'';display:block;max-width:168px;height:4px;background-color:#df001f;margin-left:22px;position:relative;bottom:-9px}.upcoming .main-upcoming{margin-top:48px;max-width:620px;width:100%}.upcoming .main-upcoming:after{content:'';clear:both;display:block}.picture-consert{position:relative;float:left;width:50%;max-width:270px}.picture-consert .date-concert{left:110px;top:110px;position:absolute;max-width:49px;color:#fff;font:700 32px/1 "Oswald",sans-serif;letter-spacing:3.2px}.picture-consert .date-concert span{font-size:45px;letter-spacing:normal}.consert-details{float:right;width:50%}.consert-details h3{color:#333;font:500 22px "Oswald",sans-serif;list-style:none;padding:0;margin:0}.consert-details .location{list-style:none;padding:0;margin:0;margin-top:33px}.consert-details .location li{color:#333;font:400 16px "DroidSans",sans-serif;margin-top:15px}.consert-details .location li span{margin:0 15px 0 30px}.consert-details .location li:first-child{margin-top:0}.consert-details .location li:first-child span{margin:0 12px 0 8px}.latest{max-width:372px;width:100%}.latest:after{content:'';clear:both;display:block}.latest iframe{width:372px;height:290px;margin-top:9px}.learn-more .learn-block{background:url("../img/bg-oldman.png") no-repeat center top/cover;padding:86px 0 81px 100px}.learn-more .learn-block h2{color:#fff;font:500 32px "Oswald",sans-serif;text-transform:uppercase;padding:0;margin:0}.learn-more .learn-block p{color:#fff;font:400 22px "DroidSans",sans-serif;padding:0;margin:0}.learn-more .learn-block p span{color:#fff;font:400 65px "Great Vibes",cursive}.download .download-block{background:url("../img/download-back.png") no-repeat center top/cover;padding:80px 0 120px 0;text-align:center}.download .download-block h2{color:#fff;font:500 32px "Oswald",sans-serif;padding:0;margin:0}.download .download-block p{color:#fff;font:400 22px "DroidSans",sans-serif;padding:0;margin:0;margin-top:9px}.popular-instagram{padding:104px 0 91px 0}.popular{max-width:772px;width:100%}.popular iframe{margin-top:40px;width:100%;height:166px}.popular .songs{list-style:none;padding:0;margin:0;margin-top:20px;column-count:3}.popular .songs li{padding:10px 0 15px 0;margin-right:60px;border-bottom:1px solid #dfdfdf}.popular .songs li a{font:400 16px "DroidSans",sans-serif;color:#333;text-decoration:none}.popular .songs li a:hover{transition:0.2s;opacity:0.7}.instagram{max-width:373px;width:100%}.instagram .instagram-pictures{margin-top:10px}.instagram .instagram-pictures a{margin-top:30px;display:inline-block}.instagram .instagram-pictures a:hover{transition:0.2s;opacity:0.8}.newsletter{padding:105px 0 70px 0}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
